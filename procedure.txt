install miniconda https://docs.conda.io/en/latest/miniconda.html
create conda virtual enviornment, you can name it whatever you want:
	conda create --name cpdenv python
	conda activate cpdenv
If you use a IDE such as pycharm or vscode, remember to set project interpretor to this virtual enviornment.

For all following oprations, make sure the newly crearted virtual enviornment is activated. The command line should show the name of virtual enviornment in brackets:
(cpdenv) username@hostname:

clone repository:
	git clone git@github.com:UM-ARM-Lab/cdcpd.git

install:
	cd cdcpd
	pip install -e .

-e installs the library in edit mode, thus changes made in the repository will be affected globally
. means install package (defined by setup.py) in current directory

You may noticed that a package named glplotlib is installed by pip. glplotlib is another opensource library developed by Cheng Chi for virualizing 3D point cloud with better performance (comparing to matplotlib). https://github.com/cheng-chi/glplotlib

install opencv:
	conda install opencv

Gurobi as a propriotoray optimization package that we use. Please obtain a license by following https://user.gurobi.com/download/licenses/free-academic
install gurobi:
	conda install gurobi -c gurobi
	install gurobi key with grbgetkey: https://www.gurobi.com/documentation/8.1/quickstart_mac/retrieving_a_free_academic.html
Note that gurobi installation requires university network. If you are not on campus, follow this instruction to setup UMVPN https://documentation.its.umich.edu/vpn/vpn-linux-vpn-instructions.


If you need tracking failure recovery, you will also need to compile VFH feature library.
Makesure you have PCL-1.8 installed. If you have ROS install, its hould be already there.
cd cdcpd/PCL_features
mkdir build
cd build
cmake ..
make
cp libfeatures.so ../libfeatures.so

to run the demo, you need download some data:
download files from https://drive.google.com/drive/folders/1QSmSOw0JvQl9xnbVnBNogk0OcNo0Rn4_?usp=sharing
to cdcpd/data folder.
